from database import db
from handlers.handlers import bot, system_message_filter, blocked_filter
from keyboard import *
import telebot 


@bot.message_handler(regexp="(^–û–±–æ –º–Ω–µ($|\süìñ))")
def about_me_handler(message):
    user = db.get_user_by_id(message.chat.id)
    text = f'<u><b>–¶–µ–Ω–∞ –∑–∞ 1 —á–∞—Å</b></u> - {user["about_me"]["price"]} —Ä—É–±.\n\n' \
           f'<u><b>–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –∫–∞–∫</b></u> - {user["about_me"]["name"]}\n\n' \
           f'<u><b>–û–±–æ –º–Ω–µ</b></u> - {user["about_me"]["about"]}'
    bot.send_message(message.chat.id, text=text, reply_markup=about_me_keyboard(), parse_mode="HTML")


@bot.callback_query_handler(func=lambda call: call.data.split('~')[0] == 'about_me_change')
def update_about_me(call):
    bot.delete_message(call.message.chat.id, call.message.message_id)
    category_about_me = call.data.split('~')[1]
    if category_about_me == 'price':
        message = bot.send_message(call.message.chat.id, text='<b>–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ 1 —á–∞—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:</b>', reply_markup=cancel_next_handlers(), parse_mode='HTML')
        bot.register_next_step_handler(message, price_consult)
    elif category_about_me == 'name':
        message = bot.send_message(call.message.chat.id, text='<b>–ö–∞–∫ –í–∞—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –≤ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞:</b>', reply_markup=cancel_next_handlers(), parse_mode='HTML')
        bot.register_next_step_handler(message, my_name)
    elif category_about_me == 'about':
        message = bot.send_message(call.message.chat.id, text='<b>–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ, –Ω–∞ —á–µ–º –í—ã —Å–ø–µ–∏—Ü–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ—Å—å –∏ —Ç.–¥. [–î–æ 700 —Å–∏–º–≤–æ–ª–æ–≤]:</b>\n', reply_markup=cancel_next_handlers(), parse_mode='HTML')
        bot.register_next_step_handler(message, my_about)


def price_consult(message):
    '''–ó–∞–¥–∞—Ç—å —Ü–µ–Ω—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏'''
    try:
        price = int(message.text)
        if price <= 0:
            message = bot.send_message(message.chat.id, text='<b>–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ 1 —á–∞—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (–¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ 0):</b>', reply_markup=cancel_next_handlers(),parse_mode='HTML')
            return bot.register_next_step_handler(message, price_consult)
    except (ValueError, TypeError):
        message = bot.send_message(message.chat.id, text='<b>–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞ 1 —á–∞—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):</b>', reply_markup=cancel_next_handlers(), parse_mode='HTML')
        return bot.register_next_step_handler(message, price_consult)
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id-1)
    bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)
    db.set_value(user_id=message.chat.id, key='about_me.price', value=price)
    about_me_handler(message)


def my_name(message):
    '''–ó–∞–¥–∞—Ç—å –∏–º—è'''
    if not message.text:
        message = bot.send_message(message.chat.id, text='<b>–ö–∞–∫ –í–∞—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –≤ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞:</b>', reply_markup=cancel_next_handlers(), parse_mode='HTML')
        return bot.register_next_step_handler(message, my_name)
    name = message.text
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id-1)
    bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)
    db.set_value(user_id=message.chat.id, key='about_me.name', value=name)
    about_me_handler(message)


def my_about(message):
    '''–ó–∞–¥–∞—Ç—å –æ —Å–µ–±–µ'''
    text = '<b>–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ, –Ω–∞ —á–µ–º –í—ã —Å–ø–µ–∏—Ü–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ—Å—å –∏ —Ç.–¥.:</b>\n'
    if not message.text:
        message = bot.send_message(message.chat.id, text=text + '(–Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)', reply_markup=cancel_next_handlers(), parse_mode='HTML')
        return bot.register_next_step_handler(message, my_about)
    if len(message.text) >= 700:
        message = bot.send_message(message.chat.id, text=text + '(–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ç–µ–∫—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ—Ä–æ—á–µ)', reply_markup=cancel_next_handlers(), parse_mode='HTML')
        return bot.register_next_step_handler(message, my_about)
    about = message.text
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id-1)
    db.set_value(user_id=message.chat.id, key='about_me.about', value=about)
    bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)
    about_me_handler(message)
