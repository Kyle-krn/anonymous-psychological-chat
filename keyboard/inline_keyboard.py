from telebot import types


def yes_no_keyboard(callback):
    '''–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–¥–∞, –Ω–µ—Ç)'''
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–î–∞', callback_data=f'{callback}~yes')
    button1 = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data=f'{callback}~no')
    keyboard.add(button, button1)
    return keyboard


def rating_keyboard():
    '''–ö–ª–∞–≤–∏–∞—É—Ç—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞'''
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='üëç', callback_data='rating~+')
    button1 = types.InlineKeyboardButton(text='üëé', callback_data='rating~-')
    keyboard.add(button, button1)
    return keyboard


def verification_keyboard():
    '''–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏'''
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å', callback_data='verification~yes')
    button1 = types.InlineKeyboardButton(text='–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ', callback_data='verification~no')
    keyboard.add(button, button1)
    return keyboard


def support_keyboard():
    '''–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞'''
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ –±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∏', url='https://t.me/TechSupportVeles')
    keyboard.add(button)
    return keyboard


def cancel_next_handlers():
    '''–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞'''
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel')
    keyboard.add(button)
    return keyboard

def cancel_next_handlers_verif():
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel_veif')
    keyboard.add(button)
    return keyboard

def helper_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–Ø —Ö–æ—á—É –ø–æ–º–æ—á—å', callback_data='helper~true')
    button1 = types.InlineKeyboardButton(text='–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å', callback_data='helper~false')
    keyboard.add(button)
    keyboard.add(button1)
    return keyboard

def choise_sum_qiwi(custom_coast=None):
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='300 —Ä.', callback_data='qiwi_order~300')
    button1 = types.InlineKeyboardButton(text='500 —Ä.', callback_data='qiwi_order~500')
    button2 = types.InlineKeyboardButton(text='700 —Ä.', callback_data='qiwi_order~700')
    button3 = types.InlineKeyboardButton(text='1000 —Ä.', callback_data='qiwi_order~1000')
    button4 = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='qiwi_order~cancel')
    if custom_coast:
        custom_coast_button = types.InlineKeyboardButton(text=f'{custom_coast} —Ä.', callback_data=f'qiwi_order~{custom_coast}')
        keyboard.add(custom_coast_button)
    keyboard.add(button, button1)
    keyboard.add(button2, button3)
    keyboard.add(button4)
    return keyboard

def order_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂', callback_data='check_payment')
    button1 = types.InlineKeyboardButton(text='–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/kyle_krn')
    button2 = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel_payment')
    keyboard.add(button)
    keyboard.add(button1, button2)
    return keyboard

def confirm_hisory_payment():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ò—Å—Ç–æ—Ä–∏—è –±–∞–ª–∞–Ω—Å–∞', callback_data='history_balance~1'))
    return keyboard

def about_me_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    # keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–±–æ –º–Ω–µ', callback_data='about_me'))
    keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É üí∞', callback_data='about_me_change~price'))
    keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è üóØ', callback_data='about_me_change~name'))
    keyboard.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å "–û–±–æ –º–Ω–µ" üìÉ', callback_data='about_me_change~about'))
    return keyboard
    
def history_payment_keyboard(payment_data, previous_page, next_page, page):
    keyboard = types.InlineKeyboardMarkup()
    for item in payment_data:
        text = ''
        if item['status'] == 'replenishment':
            text += '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ --> '
        elif item['status'] == 'income':
            text += '–î–æ—Ö–æ–¥ --> '   
        elif item['status'] == 'consumption':
            text += '–†–∞—Å—Ö–æ–¥ --> '
        elif item['status'] == 'transfer_money':
            text += '–í—ã–≤–æ–¥ --> '
        text += f'{item["coast"]} —Ä—É–±–ª–µ–π –æ—Ç {item["date"].strftime("%m/%d/%Y, %H:%M:%S")}'
        keyboard.add(types.InlineKeyboardButton(text=text, callback_data='cc'))
    previous_button = None
    next_button = None
    if previous_page:
        previous_button = types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data=f'history_balance~{previous_page}')
    page_button = types.InlineKeyboardButton(text=f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ #{page}', callback_data=f'history_balance~{page}')
    if next_page:
        next_button = types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'history_balance~{next_page}')
    if previous_button and next_button:
        keyboard.add(previous_button, page_button, next_button)
    elif previous_button:
        keyboard.add(previous_button, page_button)
    elif next_button:
        keyboard.add(page_button, next_button)
    else:
        keyboard.add(page_button)
    close_button = types.InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å ‚ùå', callback_data=f'history_balance~close')
    keyboard.add(close_button)
    return keyboard

def i_need_help_settings_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='–ò—Å–∫–∞—Ç—å –≤—Å–µ—Ö', callback_data='i_need_help~all')
    button1 = types.InlineKeyboardButton(text='–ò—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤', callback_data='i_need_help~verif')
    keyboard.add(button)
    keyboard.add(button1)
    return keyboard

def premium_rating_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    # for i in range(1,6):
    b = types.InlineKeyboardButton(text='‚≠ê', callback_data='premium_rating~1')
    b1 = types.InlineKeyboardButton(text='‚≠ê‚≠ê', callback_data='premium_rating~2')
    b2 = types.InlineKeyboardButton(text='‚≠ê‚≠ê‚≠ê', callback_data='premium_rating~3')
    b3 = types.InlineKeyboardButton(text='‚≠ê‚≠ê‚≠ê‚≠ê', callback_data='premium_rating~4')
    b4 = types.InlineKeyboardButton(text='‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê', callback_data='premium_rating~5')
    # keyboard.add(b,b1,b2,b3,b4)
    keyboard.add(b4)
    keyboard.add(b3)
    keyboard.add(b2)
    keyboard.add(b1)
    keyboard.add(b)
    return keyboard

def stop_review_keyboard(review_for, rating):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å', callback_data=f'stop_premium_rating~{review_for}~{rating}'))
    return keyboard

def start_view_review_keyboard(rating_target='companion'):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã', callback_data=f'view_{rating_target}_premium_rating~1'))
    return keyboard

def view_review_keyboard(page, previous_page, next_page, rating_target='companion'):
    keyboard = types.InlineKeyboardMarkup()
    page_button = types.InlineKeyboardButton(text=f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ #{page}', callback_data=f'view_{rating_target}_premium_rating~{page}') 
    if previous_page and next_page:
        previous_page = types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data=f'view_{rating_target}_premium_rating~{previous_page}')
        next_page = types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'view_{rating_target}_companion_premium_rating~{next_page}')
        keyboard.add(previous_page, page_button, next_page)
    elif previous_page:
        previous_page = types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data=f'view_{rating_target}_companion_premium_rating~{previous_page}')
        keyboard.add(previous_page, page_button)
    elif next_page:
        next_page = types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'view_{rating_target}_premium_rating~{next_page}')
        keyboard.add(page_button, next_page)
    else:
        keyboard.add(page_button)
    keyboard.add(types.InlineKeyboardButton(text='‚ùå', callback_data=f'view_{rating_target}_premium_rating~close'))
    return keyboard

def complaint_keyboard(companion_id):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text=f'–î–∞', callback_data=f'complaint~yes~{companion_id}'), 
                 types.InlineKeyboardButton(text=f'–ù–µ—Ç', callback_data=f'complaint~no~None'))
    return keyboard

def transfer_money_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text=f'–í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏', callback_data=f'transfer_money'))
    return keyboard